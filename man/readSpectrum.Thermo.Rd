% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readFunctionsThermo.R
\name{readSpectrum.Thermo}
\alias{readSpectrum.Thermo}
\title{readSpectrum.Thermo}
\usage{
readSpectrum.Thermo(filename, scan = NULL, centroided = FALSE)
}
\arguments{
\item{filename}{name of the .raw file from which the data is to be read}

\item{scan}{one or more integer vectors: the scan numbers to be extracted}

\item{centroided}{whether to retrieve the centroided spectrum (TRUE) or not (FALSE,
default). If set to TRUE, please note that this only works properly when there
is centroided data included in the spectrum. If there is no centroided data,
then the 'regular' spectral data 'stream' will be used - which can be centroid
(in nature), but doesn't have to be. In such cases it is up to the user to
know (via the acquisition method) what type of data it is. Please also note
that the info section a returned spectrum will contain this parameter. If it
is not correct, then it should be changed manually to the correct value.}
}
\value{
a function that reads data from the specified .raw file and returns a
list (of lists with two objects: info and data). The function generated takes
a single argument called parameters, which defines what ends up in the info
object. Options are "basic" (default), "extended" and "full". "full" attempts
to get all meta data from the spectrum into the info object and is somewhat
experimental.
}
\description{
function factory that generates a function that reads spectral
data from a thermo MS chromatogram file
}
\note{
the file(s) for this function needs to be '.raw' format. Internally the 'rawrr'
package is used to do the actual data extraction
}
\examples{
demoRaw <- fs::path_package("extdata", "reserpine07.RAW", package = "readThermo")
result <- readSpectrum.Thermo(filename = demoRaw, scan = 245, centroided = TRUE)()
result[[1]]$info
with(result[[1]]$data, plot(mz, intensity, type = "h"))
result <- readSpectrum.Thermo(filename = demoRaw, scan = c(245, 246),
 centroided = TRUE)()
result[[1]]$info
with(result[[1]]$data, plot(mz, intensity, type = "h"))
result[[2]]$info
with(result[[2]]$data, plot(mz, intensity, type = "h"))

}
