% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readFunctionsThermo.R
\name{getScans}
\alias{getScans}
\title{getScans}
\usage{
getScans(
  scanIndex = NA,
  rt = 1,
  rtLimits = c(0.5, 0.5),
  scanType = NA,
  precursorMass = NA,
  precursorLimits = c(0.05, 0.05),
  MSOrder = NA,
  charge = NA,
  sortClose = TRUE,
  limitNr = 1
)
}
\arguments{
\item{scanIndex}{the scan index data.frame (retrieved eg via the 'fileInfo.Thermo' function)}

\item{rt}{target retention time (in minutes!)}

\item{rtLimits}{two element vector specifying the +/- window around the target retemtion time}

\item{scanType}{character vector specifying the exact scantype definition}

\item{precursorMass}{numeric vector, specifying the precursor mass (only makes sense in eg MS 2)}

\item{precursorLimits}{two element vector specifying the +/- window around the target precursor mass}

\item{MSOrder}{specifies which experiment is to be selected ("Ms" for full ms, "Ms2" fro MS 2 spectra)}

\item{charge}{specifies the charge(s) of the precursor ion to be selected to be selected (only makes
sense in case of MS 2)}

\item{sortClose}{logical vector which determines if scans should be sorted on the bases of how close
the retention time is to argument 'rt'}

\item{limitNr}{if sortClose is TRUE, then if this parameter can be set as an integer to specify the
number of closest scan numbers (based on rt) will be returned. Default is 1, if NA then all will be
returned}
}
\value{
numeric vector of the scan numbers in the scan index which are within the selection criteria
}
\description{
provides a way to extract the scan numbers from a scanIndex based on eg retention time,
precursor mass, etc
}
\note{
obviously this functions doesn't have to be used at all. The scan index data.frame
can also be subset via eg tidyverse
}
\examples{
demoRaw <- fs::path_package(
  "extdata",
  "reserpine07.RAW",
  package = "readThermo"
)
result <- fileInfo.Thermo(filename = demoRaw)()
result[[1]]$data
getScans(result[[1]]$data)
getScans(result[[1]]$data, rt = 5)
getScans(result[[1]]$data, rt = 5, rtLimits = c(0.1, 0.1), limitNr = NA)

}
